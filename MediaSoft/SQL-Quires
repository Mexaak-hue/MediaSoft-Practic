CREATE TABLE IF NOT EXISTS Покупатели (
    идентификатор INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    дата_рождения DATE
);

CREATE TABLE IF NOT EXISTS Покупки (
    идентификатор INT PRIMARY KEY,
    ключ_покупателя INT,
    ключ_товара INT,
    дата_покупки DATE,
    FOREIGN KEY (ключ_покупателя) REFERENCES Покупатели(идентификатор),
    FOREIGN KEY (ключ_товара) REFERENCES Товары(идентификатор)
);

CREATE TABLE IF NOT EXISTS Товары (
    идентификатор INT PRIMARY KEY,
    название VARCHAR(100),
    стоимость DECIMAL(10, 2)
);
DELETE FROM Покупки;
DELETE FROM Покупатели;
DELETE FROM Товары;

-- Заполнение таблицы Покупатели
INSERT INTO Покупатели (идентификатор, имя, фамилия, дата_рождения) VALUES
(1, 'Алексей', 'Иванов', '1980-01-15'),
(2, 'Мария', 'Смирнова', '1990-06-25'),
(3, 'Иван', 'Петров', '1975-03-30'),
(4, 'Наталья', 'Кузнецова', '1985-05-10'),
(5, 'Сергей', 'Волков', '1992-07-20'),
(6, 'Ольга', 'Попова', '1988-11-05'),
(7, 'Дмитрий', 'Соколов', '1981-02-17'),
(8, 'Елена', 'Орлова', '1994-09-12'),
(9, 'Виктор', 'Зайцев', '1983-03-25'),
(10, 'Анастасия', 'Павлова', '1996-12-08');

-- Заполнение таблицы Товары
INSERT INTO Товары (идентификатор, название, стоимость) VALUES
(1, 'Булка с изюмом', 50.00),
(2, 'Круассан', 80.00),
(3, 'Торт Наполеон', 200.00),
(4, 'Эклер', 60.00),
(5, 'Пирожное картошка', 70.00),
(6, 'Печенье с шоколадом', 40.00),
(7, 'Маффин', 55.00),
(8, 'Шарлотка', 90.00),
(9, 'Пирог с вишней', 120.00),
(10, 'Слойка с яблоком', 65.00);

-- Заполнение таблицы Покупки
INSERT INTO Покупки (идентификатор, ключ_покупателя, ключ_товара, дата_покупки) VALUES
(1, 1, 1, '2025-01-01'),
(2, 1, 2, '2025-01-15'),
(3, 1, 3, '2025-01-20'),
(4, 2, 4, '2025-02-05'),
(5, 2, 1, '2025-02-20'),
(6, 3, 5, '2025-03-15'),
(7, 4, 6, '2025-03-25'),
(8, 4, 2, '2025-04-10'),
(9, 5, 7, '2025-04-15'),
(10, 5, 3, '2025-05-01'),
(11, 6, 8, '2025-05-05'),
(12, 7, 9, '2025-06-10'),
(13, 8, 10, '2025-07-12'),
(14, 9, 3, '2025-08-15'),
(15, 9, 1, '2025-09-20'),
(16, 10, 6, '2025-10-05');

SELECT
    p.имя,
    p.фамилия,
    COUNT(п.идентификатор) AS количество_покупок,
    SUM(t.стоимость) AS общая_стоимость
FROM
    Покупатели p
JOIN
    Покупки п ON p.идентификатор = п.ключ_покупателя
JOIN
    Товары t ON п.ключ_товара = t.идентификатор
GROUP BY
    p.идентификатор, p.имя, p.фамилия
ORDER BY
    количество_покупок DESC;

SELECT
    p.имя,
    p.фамилия,
    COUNT(п.идентификатор) AS количество_покупок
FROM
    Покупатели p
JOIN
    Покупки п ON p.идентификатор = п.ключ_покупателя
GROUP BY
    p.идентификатор, p.имя, p.фамилия
HAVING
    COUNT(п.идентификатор) = 1;
